[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "rww.science/blog",
    "section": "",
    "text": "Welcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\nOregon County Support for Retaining Slavery in the OR Constitution\n\n\n\n\n\n\n\nR\n\n\ntidyverse\n\n\n\n\n\n\n\n\n\n\n\nNov 9, 2022\n\n\nRWW\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/2022-11-09-slavery-OR/index.html",
    "href": "posts/2022-11-09-slavery-OR/index.html",
    "title": "Oregon County Support for Retaining Slavery in the OR Constitution",
    "section": "",
    "text": "Last update: November 15. 2022\nIn preparation for the dumpster fire that is Oregon election reporting, I previously posed on importing a directory of .csv files. At present, that is what I can find to build this. What does the interface look like?\nThis is terrible, there is a javascript button to download each separately. Nevertheless, here we go.\nFirst, to import the various files. I am going to use an import then export trick to make this easier. First, let me use the directory to create the county names.\nWith that I can pull in each file, add the county name to it, and save it back.\nNow to use these to create the data.\nWhat does it look like?"
  },
  {
    "objectID": "posts/2022-11-09-slavery-OR/index.html#peeling-the-results-of-interest",
    "href": "posts/2022-11-09-slavery-OR/index.html#peeling-the-results-of-interest",
    "title": "Oregon County Support for Retaining Slavery in the OR Constitution",
    "section": "Peeling the results of interest",
    "text": "Peeling the results of interest\n\nSlavery.Res <- Oregon.County.Results %>%\n  filter(ContestID==100002574 & CandidateName==\"No\") %>%\n  select(County, CandidatePercentage)\nlibrary(tigris); library(rgdal); library(htmltools); library(viridis); library(sf); library(ggrepel)\ncounties.t <- counties(state = \"41\", resolution = \"500k\", class=\"sf\")\nMap.Me <- left_join(counties.t,Slavery.Res, by=c(\"NAME\" = \"County\"))\n\nNow to map it.\n\nMy.Map <- Map.Me %>% \n  ggplot(., aes(geometry=geometry, fill=CandidatePercentage, label=NAME, group=NAME)) + \n  geom_sf() +\n  geom_label_repel(stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    colour = \"white\",\n    segment.colour = \"white\",\n    size = 1,\n    box.padding = unit(0.05, \"lines\")) +\n  scale_fill_continuous_tableau(\"Red\") + \n  theme_minimal() + \n  labs(title=\"Remove Slavery Measure from Oregon Constitution\", \n       x=\"\", \n       y=\"\", \n       fill=\"Percentage No's\")\n\nHere is the map.\n\nMy.Map"
  },
  {
    "objectID": "posts/2022-11-09-slavery-OR/index.html#a-regression",
    "href": "posts/2022-11-09-slavery-OR/index.html#a-regression",
    "title": "Oregon County Support for Retaining Slavery in the OR Constitution",
    "section": "A Regression",
    "text": "A Regression\nI want to estimate a simple regression on some of these data; how much of the variance in No votes for removing slavery from the Oregon Constitution can be explained by support for Christine Drazan.\n\nOregon.County.Results %>% \n  filter((ContestID==100002574 & CandidateName==\"No\") | CandidateName==\"Christine Drazan\") %>% \n  select(County, CandidatePercentage, CandidateName) %>%\n  pivot_wider(., names_from=\"CandidateName\", values_from=\"CandidatePercentage\") %>% \n  lm(`No` ~ `Christine Drazan`, data=.) %>% summary\n\n\nCall:\nlm(formula = No ~ `Christine Drazan`, data = .)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.037100 -0.020341 -0.005199  0.011769  0.074723 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         0.08045    0.01956   4.114 0.000233 ***\n`Christine Drazan`  0.88101    0.03261  27.020  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03019 on 34 degrees of freedom\nMultiple R-squared:  0.9555,    Adjusted R-squared:  0.9542 \nF-statistic: 730.1 on 1 and 34 DF,  p-value: < 2.2e-16\n\n\nWhoa! Almost 96% using the current totals as of 10AM on the day after the election.\n\nlibrary(emoGG)\nOregon.County.Results %>% \n  filter((ContestID==100002574 & CandidateName==\"No\") | CandidateName==\"Christine Drazan\") %>% \n  select(County, CandidatePercentage, CandidateName) %>%\n  pivot_wider(., names_from=\"CandidateName\", values_from=\"CandidatePercentage\") %>% \n  ggplot() + \n  aes(x=`Christine Drazan`, y=No) + \n  geom_point(color=\"purple\") + \n  geom_smooth(method=\"lm\") +\n  theme_minimal() +\n  labs(y=\"No to Removing Slavery\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nlibrary(plotly)\nOregon.County.Results %>% \n  filter((ContestID==100002574 & CandidateName==\"No\") | CandidateName==\"Christine Drazan\") %>% \n  select(County, CandidatePercentage, CandidateName) %>%\n  pivot_wider(., names_from=\"CandidateName\", values_from=\"CandidatePercentage\") %>% \n  ggplot() + \n  aes(x=`Christine Drazan`, y=No, label=County) + \n  geom_point() + \n  geom_smooth(method=\"lm\") + theme_minimal() +\n  labs(y=\"Proportion No Votes on Slavery Removal\", x=\"Drazan Vote Proportion\", title=\"Removing Slavery for Convicts from Oregon's Constitution and Drazan Vote\", subtitle=\"By Oregon County, Correlation: 0.9775\") -> pgg\npgg\n\n\n\nggplot2::ggsave(filename = \"image.jpg\", plot=pgg)\n\nAs a plotly\n\nggplotly(pgg)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation: label\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]